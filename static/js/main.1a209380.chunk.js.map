{"version":3,"sources":["ThemeContext.js","CategoryButton.js","FileUploader.js","Toolbar.js","StackTraceToggle.js","InfoToggle.js","StackTrace.js","Info.js","Log.js","ThemeSwitch.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","React","createContext","CategoryButton","props","state","active","handleClick","bind","this","setState","onCategoryToggle","title","console","log","onClick","id","className","style","textDecoration","opacity","Component","FileUploader","readSingleFile","e","file","target","files","reader","FileReader","onload","contents","result","onLoadedLog","JSON","parse","readAsText","type","onChange","document","getElementById","click","Toolbar","Consumer","value","width","textAlign","StackTraceToggle","InfoToggle","infoClass","StackTrace","traceClass","show","open","undefined","stackTrace","trace","map","data","index","key","Info","info","Log","showStackTrace","showInfo","showStackTraceElement","showInfoElement","isRendered","categories","forEach","element","filter","categoryTags","timeStamp","toFixed","ThemeSwitch","localStorage","getItem","handleToggle","isChecked","swapTheme","class","checked","defaultProps","Footer","sessionData","ProductName","Version","Platform","CompanyName","SessionStartTime","SessionEndTime","SessionDuration","App","startupTheme","session","theme","addLogData","toggleCategory","toggleTheme","body","getElementsByTagName","setItem","isActive","categoriesCopy","Object","assign","logs","Logs","TimeStamp","Categories","Provider","SessionData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1a209380.chunk.js","sourcesContent":["import React from 'react';\r\n \r\n\r\nconst ThemeContext = React.createContext(null);\r\n \r\nexport default ThemeContext;","import React from 'react';\r\n\r\nclass CategoryButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { active: true };\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState(state => ({\r\n            active: !state.active\r\n        }));\r\n\r\n        this.props.onCategoryToggle(this.props.title, !this.state.active);\r\n        console.log(this.props.title + \" \" + this.state.active);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.active === true)\r\n        {\r\n            return (\r\n                <a onClick={this.handleClick} id={this.props.title} className='categoryButton'>{this.props.title}</a>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <a onClick={this.handleClick} id={this.props.title} className='categoryButton' style={{textDecoration:'line-through', opacity:'60%'}}>{this.props.title}</a>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CategoryButton;","import React from 'react';\r\n\r\nclass FileUploader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    readSingleFile = (e) => {\r\n        var file = e.target.files[0];\r\n        if (!file) {\r\n            return;\r\n        }\r\n        var reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            let contents = e.target.result;\r\n            this.props.onLoadedLog(JSON.parse(contents));\r\n        };\r\n        reader.readAsText(file);\r\n    }\r\n\r\n    /* dropHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log('File(s) dropped');\r\n    }\r\n\r\n    dragOverHandler = (e) => {\r\n        console.log('File(s) in drop zone'); \r\n      \r\n        // Prevent default behavior (Prevent file from being opened)\r\n        e.preventDefault();\r\n    } */\r\n    \r\n    render() {\r\n        return (\r\n            /*<div class='fileButtonContainer' onDrop={(e) => this.dropHandler(e)} onDrag={(e) => this.dragOverHandler(e)}>*/\r\n            <div className='fileButtonContainer'> \r\n                <input type='file' id='hiddenUpload' className='categoryButton' onChange={this.readSingleFile} />\r\n                <a onClick={() => document.getElementById('hiddenUpload').click()} id='upload' className='categoryButton'>upload</a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileUploader;","import React from 'react';\r\nimport CategoryButton from './CategoryButton';\r\nimport FileUploader from './FileUploader';\r\nimport ThemeContext from './ThemeContext';\r\n\r\nclass Toolbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ThemeContext.Consumer>\r\n                {value => (\r\n                    <div>\r\n                        <div className='toolbar'>\r\n                            <div className={'logo_' + value}>\r\n                                <h1 className='logoText'>logist</h1>\r\n                            </div>\r\n                            <div className='categoryButtonContainer'>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='assert'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='error'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='exception'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='warning'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='system'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='performance'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='log'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='graphics'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='ai'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='audio'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='content'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='logic'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='gui'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='input'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='network'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='animation'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='physics'/>\r\n                                <CategoryButton onCategoryToggle={this.props.onCategoryToggle} title='event'/>\r\n                            </div>\r\n                            <div>\r\n                                <FileUploader onLoadedLog={this.props.onLoadedLog}/>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <div className={'logHeader_' + value}>\r\n                                <table className='logHeaderTable'>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td width=\"5%\">time</td>\r\n                                            <td width=\"10%\">categories</td>\r\n                                            <td width=\"80%\">message</td>\r\n                                            <td width=\"2.5%\" style={{textAlign:'center'}}>stack</td>\r\n                                            <td width=\"2.5%\" style={{textAlign:'center'}}>info</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </ThemeContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\n\r\nclass StackTraceToggle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n\r\n        this.handleClick = this.props.onClick.bind(this);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <center>\r\n                <a onClick={this.handleClick} className='stackTrace-button'/>\r\n            </center>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StackTraceToggle;","import React from 'react';\r\n\r\nclass InfoToggle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { infoClass: 'infoHide'};\r\n\r\n        this.handleClick = this.props.onClick.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <center>\r\n                <a onClick={this.handleClick} className='info-button'/>\r\n            </center>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InfoToggle;","import React from 'react';\r\nimport ThemeContext from './ThemeContext';\r\n\r\nclass StackTrace extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {traceClass: 'stackTraceShow'};\r\n    }\r\n\r\n    handleVisibility()\r\n    {\r\n        if (this.props.show) {\r\n            this.setState({\r\n                traceClass: 'stackTraceShow'\r\n            })\r\n        }\r\n        else {\r\n           this.setState({\r\n                traceClass: 'stackTraceHide'\r\n           })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.open === false || this.props.open === undefined)\r\n        {\r\n            return (<div/>);\r\n        }\r\n\r\n        const stackTrace = this.props.trace.map((data, index) =>\r\n            <p key='index'>{data}</p>\r\n        );\r\n\r\n        return (\r\n            <ThemeContext.Consumer>\r\n                {value => (\r\n                    <div className={this.state.traceClass + '_' + value}>\r\n                        {stackTrace}\r\n                    </div>\r\n                )}\r\n            </ThemeContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StackTrace;","import React from 'react';\r\nimport ThemeContext from './ThemeContext';\r\n\r\nclass Info extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {traceClass: 'infoShow'};\r\n    }\r\n\r\n    onToggle()\r\n    {\r\n        if (this.state.traceClass === 'infoHide') {\r\n            this.setState({\r\n                traceClass: 'infoShow'\r\n            })\r\n        }\r\n        else {\r\n           this.setState({\r\n                traceClass: 'infoHide'\r\n           })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.open === false || this.props.open === undefined)\r\n        {\r\n            return (<div/>);\r\n        }\r\n\r\n        return (\r\n            <ThemeContext.Consumer>\r\n                {value => (\r\n                    <div className={this.state.traceClass + '_' + value}>\r\n                        {this.props.info}\r\n                    </div>\r\n                )}\r\n            </ThemeContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Info;","import React from 'react';\r\nimport StackTraceToggle from './StackTraceToggle';\r\nimport InfoToggle from './InfoToggle';\r\nimport StackTrace from './StackTrace';\r\nimport Info from './Info';\r\nimport ThemeContext from './ThemeContext';\r\n\r\nclass Log extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = \r\n        {\r\n            showStackTrace: false,\r\n            showInfo: false,\r\n        };\r\n\r\n        this.showStackTraceElement = this.showStackTraceElement.bind(this);\r\n        this.showInfoElement = this.showInfoElement.bind(this);\r\n    }\r\n\r\n    showStackTraceElement() \r\n    {\r\n        this.setState(state => ({\r\n            showStackTrace: !state.showStackTrace,\r\n            showInfo: state.showInfo\r\n        }));\r\n    }\r\n\r\n    showInfoElement() \r\n    {\r\n        this.setState(state => ({\r\n            showStackTrace: state.showStackTrace,\r\n            showInfo: !state.showInfo\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        let isRendered = false;\r\n        this.props.categories.forEach(element => {\r\n            isRendered = isRendered || this.props.filter[element];\r\n        });\r\n        if (isRendered === false)\r\n        {\r\n            return (<div/>);\r\n        }\r\n        \r\n        const categoryTags = this.props.categories.map((data, index) =>\r\n            this.props.filter[data] \r\n            ? <a key={index} id={data} className='categoryTag'>{data}</a>\r\n            : <a key={index} id={data} className='categoryTag' style={{textDecoration:'line-through', opacity:'60%'}}>{data}</a>\r\n        );\r\n\r\n        return (\r\n            <ThemeContext.Consumer>\r\n                {value => (\r\n                    <div className={'log_' + value}>\r\n                        <table className='logContents'>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td width=\"5%\">{this.props.timeStamp.toFixed(3)}</td>\r\n                                    <td width=\"10%\">\r\n                                        {categoryTags}\r\n                                    </td>\r\n                                    <td width=\"80%\">{this.props.log}</td>\r\n                                    <td width=\"2.5%\">\r\n                                        <StackTraceToggle onClick={this.showStackTraceElement}/>\r\n                                    </td>\r\n                                    <td width=\"2.5%\">\r\n                                        <InfoToggle  onClick={this.showInfoElement}/>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <StackTrace trace={this.props.trace} open={this.state.showStackTrace}/>\r\n                        <Info info={this.props.info} open={this.state.showInfo}/>\r\n                    </div>\r\n                )}\r\n            </ThemeContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Log;","import React from 'react';\nimport ThemeContext from './ThemeContext';\n\nclass ThemeSwitch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let checked = localStorage.getItem('theme') === 'light';\n\n    this.state = {}\n    this.handleToggle = this.handleToggle.bind(this);\n  } \n\n  handleToggle() {\n    this.setState(state => ({\n      isChecked: !state.isChecked\n    }),\n    this.props.swapTheme()\n    );\n  }\n\n  render() {\n    return (\n        <label class=\"switch\">\n            <input onClick={this.props.swapTheme} type=\"checkbox\" checked={this.props.isChecked}/>\n            <span class=\"slider round\"></span>\n        </label>\n    );\n  }\n}\n\nThemeSwitch.defaultProps = {\n  isChecked: false\n}; \n\nexport default ThemeSwitch;\n","import React from 'react';\r\nimport ThemeSwitch from './ThemeSwitch';\r\nimport ThemeContext from './ThemeContext';\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.sessionData === undefined)\r\n        {\r\n            return (\r\n                <ThemeContext.Consumer>\r\n                    {value => (\r\n                        <div className={'footer_' + value}>\r\n                            <div className='themeButtonContainer'>\r\n                                <ThemeSwitch  swapTheme={this.props.swapTheme} isChecked={this.props.isChecked}/>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </ThemeContext.Consumer>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <ThemeContext.Consumer>\r\n                {value => (\r\n                    <div className={'footer_' + value}>\r\n                        <div className='sessionInfoContainer'>\r\n                            {this.props.sessionData.ProductName}, v{this.props.sessionData.Version} {this.props.sessionData.Platform} {this.props.sessionData.CompanyName}\r\n                            <br/>\r\n                            from {this.props.sessionData.SessionStartTime} to {this.props.sessionData.SessionEndTime} ({this.props.sessionData.SessionDuration})\r\n                        </div>\r\n                        <div className='themeButtonContainer'>\r\n                            <ThemeSwitch  swapTheme={this.props.swapTheme} isChecked={this.props.isChecked}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </ThemeContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport ThemeContext from './ThemeContext';\nimport Toolbar from './Toolbar'\nimport Log from './Log'\nimport Footer from './Footer'\nimport ThemeSwitch from './ThemeSwitch'\nimport './App.css';\n\nconst ActiveCategories = React.createContext('activeCategories');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let startupTheme = 'dark';\n    if ('theme' in localStorage) {\n      startupTheme = localStorage.getItem('theme');\n    }\n\n    this.state = \n    {\n      session: {},\n      categories: {\n          'assert': true,        \n          'error': true,\n          'exception': true,\n          'warning': true,\n          'system': true,        \n          'performance': true,\n          'log': true, \n          'graphics': true, \n          'ai': true,\n          'audio': true, \n          'content': true, \n          'logic': true, \n          'gui': true, \n          'input': true,  \n          'network': true, \n          'animation': true, \n          'physics': true, \n          'event': true\n      },\n      theme: startupTheme\n    }\n    this.addLogData = this.addLogData.bind(this);\n    this.toggleCategory = this.toggleCategory.bind(this);\n    this.toggleTheme = this.toggleTheme.bind(this);\n\n    let body = document.getElementsByTagName(\"BODY\")[0];\n      if (this.state.theme === 'dark')\n      {\n        body.className = 'dark';\n      }\n      else if (this.state.theme === 'light')\n      {\n        body.className = 'light';\n      }\n\n    console.log(\"startup theme is \" + this.state.theme);\n  }\n\n  toggleTheme() {\n    this.setState(state => ({\n      session: this.state.session,\n      categories: this.state.categories,\n      theme:\n        state.theme === 'dark'//themes.dark\n          ? 'light'//themes.light\n          : 'dark'//themes.dark,\n    }\n    ), \n    () => {\n      console.log(\"theme changed to \" + this.state.theme);\n      localStorage.setItem('theme', this.state.theme);\n\n      let body = document.getElementsByTagName(\"BODY\")[0];\n      if (this.state.theme === 'dark')\n      {\n        body.className = 'dark';\n      }\n      else if (this.state.theme === 'light')\n      {\n        body.className = 'light';\n      }\n    });\n    \n    localStorage.setItem('theme', this.state.theme);\n\n    \n\n    //console.log(\"theme changed to \" + this.state.theme);\n  };\n\n  updateLocalStorage()\n  {\n    console.log(\"theme changed to \" + this.state.theme);\n    localStorage.setItem('theme', this.state.theme);\n  }\n\n  addLogData(sessionData)\n  {\n    console.log(sessionData);\n    this.setState({session: sessionData, categories: this.state.categories, theme: this.state.theme});\n  }\n\n  toggleCategory(key, isActive)\n  {\n    const categoriesCopy = Object.assign({}, this.state.categories);\n    categoriesCopy[key] = isActive;\n    this.setState({session: this.state.session, categories: categoriesCopy, theme: this.state.theme});\n  }\n\n  render() {\n\n    let logs = (<div/>);\n    if (this.state.session.Logs !== undefined)\n    {\n      logs = this.state.session.Logs.map((data, index) =>\n        <Log key={index} filter={this.state.categories} timeStamp={data.TimeStamp} categories={data.Categories} log={data.Log} trace={data.StackTrace} info={'data.info'} />\n      );\n    }\n\n    return (\n      <ThemeContext.Provider value={this.state.theme}>\n        <div className=\"App\">\n          <Toolbar onLoadedLog={this.addLogData} onCategoryToggle={this.toggleCategory}/>\n          <div className='logContainer'>\n            {logs}\n          </div>\n          <Footer swapTheme={this.toggleTheme} isChecked={this.state.theme !== 'dark'} sessionData={this.state.session.SessionData}/>\n        </div>\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}