{"ast":null,"code":"var _jsxFileName = \"E:\\\\Game Development\\\\Loggerhead 2.0\\\\loggerhead\\\\src\\\\FileUploader.js\";\nimport React from 'react';\n\nclass FileUploader extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.readSingleFile = e => {\n      var file = e.target.files[0];\n\n      if (!file) {\n        return;\n      }\n\n      var reader = new FileReader();\n\n      reader.onload = e => {\n        let contents = e.target.result;\n        this.props.onLoadedLog(JSON.parse(contents));\n      };\n\n      reader.readAsText(file);\n    };\n\n    this.dropHandler = e => {\n      e.preventDefault();\n      console.log('File(s) dropped');\n    };\n\n    this.dragOverHandler = e => {\n      console.log('File(s) in drop zone'); // Prevent default behavior (Prevent file from being opened)\n\n      e.preventDefault();\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n\n      /*<div class='fileButtonContainer' onDrop={(e) => this.dropHandler(e)} onDrag={(e) => this.dragOverHandler(e)}>*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        id: \"hiddenUpload\",\n        className: \"categoryButton\",\n        onChange: this.readSingleFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => document.getElementById('upload').click(),\n        id: \"upload\",\n        className: \"categoryButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, \"upload\"))\n    );\n  }\n\n}\n\nexport default FileUploader;","map":{"version":3,"sources":["E:/Game Development/Loggerhead 2.0/loggerhead/src/FileUploader.js"],"names":["React","FileUploader","Component","constructor","props","readSingleFile","e","file","target","files","reader","FileReader","onload","contents","result","onLoadedLog","JSON","parse","readAsText","dropHandler","preventDefault","console","log","dragOverHandler","state","render","document","getElementById","click"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAKnBC,cALmB,GAKDC,CAAD,IAAO;AACpB,UAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX;;AACA,UAAI,CAACF,IAAL,EAAW;AACP;AACH;;AACD,UAAIG,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAiBN,CAAD,IAAO;AACnB,YAAIO,QAAQ,GAAGP,CAAC,CAACE,MAAF,CAASM,MAAxB;AACA,aAAKV,KAAL,CAAWW,WAAX,CAAuBC,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAvB;AACH,OAHD;;AAIAH,MAAAA,MAAM,CAACQ,UAAP,CAAkBX,IAAlB;AACH,KAhBkB;;AAAA,SAkBnBY,WAlBmB,GAkBJb,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACc,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,KArBkB;;AAAA,SAuBnBC,eAvBmB,GAuBAjB,CAAD,IAAO;AACrBe,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EADqB,CAGrB;;AACAhB,MAAAA,CAAC,CAACc,cAAF;AACH,KA5BkB;;AAEf,SAAKI,KAAL,GAAa,EAAb;AACH;;AA2BDC,EAAAA,MAAM,GAAG;AACL;AAAA;;AACI;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,cAAtB;AAAqC,QAAA,SAAS,EAAC,gBAA/C;AAAgE,QAAA,QAAQ,EAAE,KAAKpB,cAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAG,QAAA,OAAO,EAAE,MAAMqB,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,EAAlB;AAA6D,QAAA,EAAE,EAAC,QAAhE;AAAyE,QAAA,SAAS,EAAC,gBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAFJ;AAOH;;AAvCsC;;AA0C3C,eAAe3B,YAAf","sourcesContent":["import React from 'react';\r\n\r\nclass FileUploader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    readSingleFile = (e) => {\r\n        var file = e.target.files[0];\r\n        if (!file) {\r\n            return;\r\n        }\r\n        var reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            let contents = e.target.result;\r\n            this.props.onLoadedLog(JSON.parse(contents));\r\n        };\r\n        reader.readAsText(file);\r\n    }\r\n\r\n    dropHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log('File(s) dropped');\r\n    }\r\n\r\n    dragOverHandler = (e) => {\r\n        console.log('File(s) in drop zone'); \r\n      \r\n        // Prevent default behavior (Prevent file from being opened)\r\n        e.preventDefault();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            /*<div class='fileButtonContainer' onDrop={(e) => this.dropHandler(e)} onDrag={(e) => this.dragOverHandler(e)}>*/\r\n            <div> \r\n                <input type='file' id='hiddenUpload' className='categoryButton' onChange={this.readSingleFile} />\r\n                <a onClick={() => document.getElementById('upload').click()} id='upload' className='categoryButton'>upload</a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileUploader;"]},"metadata":{},"sourceType":"module"}