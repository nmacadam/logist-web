{"ast":null,"code":"var _jsxFileName = \"E:\\\\Game Development\\\\Loggerhead 2.0\\\\loggerhead\\\\src\\\\App.js\";\nimport React from 'react';\nimport Toolbar from './Toolbar';\nimport Log from './Log';\nimport './App.css';\nconst ActiveCategories = React.createContext('activeCategories');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: {\n        'assert': true,\n        'error': true,\n        'exception': true,\n        'warning': true,\n        'system': true,\n        'performance': true,\n        'log': true,\n        'graphics': true,\n        'ai': true,\n        'audio': true,\n        'content': true,\n        'logic': true,\n        'gui': true,\n        'input': true,\n        'network': true,\n        'animation': true,\n        'physics': true,\n        'event': true\n      }\n    };\n  }\n\n  toggleCategory(category) {\n    let modifiedCategories = this.state.categories;\n    modifiedCategories[category] = !modifiedCategories[category];\n    this.setState(state => ({\n      categories: modifiedCategories\n    }));\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n\n      /*<ActiveCategories.Provider value={['assert', 'error', 'exception', 'warning', 'system', 'performance', 'log', 'graphics', 'ai', 'audio', 'content', 'logic', 'gui', 'input', 'network', 'animation', 'physics', 'event']}>*/\n      React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Toolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Log, {\n        timeStamp: \"now\",\n        categories: [\"log\", \"system\"],\n        log: \"hello world\",\n        trace: \"stack\",\n        info: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Log, {\n        timeStamp: \"now\",\n        categories: [\"log\", \"system\"],\n        log: \"hello world\",\n        trace: \"stack\",\n        info: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Log, {\n        timeStamp: \"now\",\n        categories: [\"log\", \"system\"],\n        log: \"hello world\",\n        trace: \"stack\",\n        info: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Log, {\n        timeStamp: \"now\",\n        categories: [\"log\", \"system\"],\n        log: \"hello world\",\n        trace: \"stack\",\n        info: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Log, {\n        timeStamp: \"now\",\n        categories: [\"log\", \"system\"],\n        log: \"hello world\",\n        trace: \"stack\",\n        info: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      })))\n      /*</ActiveCategories.Provider>*/\n\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Game Development/Loggerhead 2.0/loggerhead/src/App.js"],"names":["React","Toolbar","Log","ActiveCategories","createContext","App","Component","constructor","props","state","categories","toggleCategory","category","modifiedCategories","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Toolbar from './Toolbar'\nimport Log from './Log'\nimport './App.css';\n\nconst ActiveCategories = React.createContext('activeCategories');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = \n    {\n      categories: {\n          'assert': true,        \n          'error': true,\n          'exception': true,\n          'warning': true,\n          'system': true,        \n          'performance': true,\n          'log': true, \n          'graphics': true, \n          'ai': true,\n          'audio': true, \n          'content': true, \n          'logic': true, \n          'gui': true, \n          'input': true,  \n          'network': true, \n          'animation': true, \n          'physics': true, \n          'event': true\n      }\n    }\n  }\n\n  toggleCategory(category)\n  {\n    let modifiedCategories = this.state.categories;\n    modifiedCategories[category] = !modifiedCategories[category];\n    this.setState(state => ({\n      categories: modifiedCategories\n    }));\n  }\n\n  render() {\n    return (\n      /*<ActiveCategories.Provider value={['assert', 'error', 'exception', 'warning', 'system', 'performance', 'log', 'graphics', 'ai', 'audio', 'content', 'logic', 'gui', 'input', 'network', 'animation', 'physics', 'event']}>*/\n        <div className=\"App\">\n          <Toolbar/>\n          <div>\n            <Log timeStamp=\"now\" categories={[\"log\", \"system\"]} log=\"hello world\" trace=\"stack\" info=\"info\" />\n            <Log timeStamp=\"now\" categories={[\"log\", \"system\"]} log=\"hello world\" trace=\"stack\" info=\"info\" />\n            <Log timeStamp=\"now\" categories={[\"log\", \"system\"]} log=\"hello world\" trace=\"stack\" info=\"info\" />\n            <Log timeStamp=\"now\" categories={[\"log\", \"system\"]} log=\"hello world\" trace=\"stack\" info=\"info\" />\n            <Log timeStamp=\"now\" categories={[\"log\", \"system\"]} log=\"hello world\" trace=\"stack\" info=\"info\" />\n          </div>\n        </div>\n      /*</ActiveCategories.Provider>*/\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}